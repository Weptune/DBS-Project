1. Display Total Number of Users
SET SERVEROUTPUT ON;

BEGIN
  DECLARE
    total_users NUMBER;
  BEGIN
    SELECT COUNT(*) INTO total_users FROM users;
    DBMS_OUTPUT.PUT_LINE('Total Users: ' || total_users);
  END;
END;
/

2. Count Number of Posts Per User
SET SERVEROUTPUT ON;

BEGIN
  FOR rec IN (
    SELECT posted_user_id, COUNT(*) AS post_count
    FROM posts
    GROUP BY posted_user_id
  ) LOOP
    DBMS_OUTPUT.PUT_LINE('User ID ' || rec.posted_user_id || ' has ' || rec.post_count || ' posts.');
  END LOOP;
END;
/

3. Show Users with More Than 1 Friend
SET SERVEROUTPUT ON;

BEGIN
  FOR rec IN (
    SELECT user_id, COUNT(*) AS friend_count
    FROM friends
    GROUP BY user_id
    HAVING COUNT(*) > 1
  ) LOOP
    DBMS_OUTPUT.PUT_LINE('User ' || rec.user_id || ' has ' || rec.friend_count || ' friends.');
  END LOOP;
END;
/

4. Show All Comments on a Specific Post ID (e.g., Post_ID = 1)
SET SERVEROUTPUT ON;

DECLARE
  v_post_id NUMBER := 1;
BEGIN
  FOR rec IN (
    SELECT comment_content FROM post_comments WHERE post_id = v_post_id
  ) LOOP
    DBMS_OUTPUT.PUT_LINE('Comment: ' || rec.comment_content);
  END LOOP;
END;
/

5. List All Users Who Have Liked a Post (e.g., Post_ID = 1)
SET SERVEROUTPUT ON;

DECLARE
  v_post_id NUMBER := 1000;
BEGIN
  FOR rec IN (
    SELECT liked_user_id FROM post_likes WHERE post_id = v_post_id
  ) LOOP
    DBMS_OUTPUT.PUT_LINE('Liked by user ID: ' || rec.liked_user_id);
  END LOOP;
END;
/

6. Find Most Recent Post by Any User
SET SERVEROUTPUT ON;

DECLARE
  v_user_id users.user_id%TYPE;
  v_content posts.post_content%TYPE;
  v_date posts.post_date%TYPE;
BEGIN
  SELECT posted_user_id, post_content, post_date
  INTO v_user_id, v_content, v_date
  FROM posts
  WHERE post_date = (SELECT MAX(post_date) FROM posts);

  DBMS_OUTPUT.PUT_LINE('Latest Post by User ' || v_user_id || ' on ' || v_date || ': ' || v_content);
END;
/

7. Display Like Count for Each Post
SET SERVEROUTPUT ON;

BEGIN
  FOR rec IN (
    SELECT post_id, COUNT(*) AS like_count
    FROM post_likes
    GROUP BY post_id
  ) LOOP
    DBMS_OUTPUT.PUT_LINE('Post ID ' || rec.post_id || ' has ' || rec.like_count || ' likes.');
  END LOOP;
END;
/

8. List Pages with More Than 1 Like
SET SERVEROUTPUT ON;

BEGIN
  FOR rec IN (
    SELECT page_id, COUNT(*) AS like_count
    FROM page_likes
    GROUP BY page_id
    HAVING COUNT(*) > 1
  ) LOOP
    DBMS_OUTPUT.PUT_LINE('Page ID ' || rec.page_id || ' has ' || rec.like_count || ' likes.');
  END LOOP;
END;
/

9. Display Full Name and Age of All Users
SET SERVEROUTPUT ON;

BEGIN
  FOR rec IN (
    SELECT first_name, last_name, ROUND(MONTHS_BETWEEN(SYSDATE, dob) / 12) AS age
    FROM users
  ) LOOP
    DBMS_OUTPUT.PUT_LINE(rec.first_name || ' ' || rec.last_name || ' is ' || rec.age || ' years old.');
  END LOOP;
END;
/

10. List Users Who Liked and Commented on the Same Post
SET SERVEROUTPUT ON;

BEGIN
  FOR rec IN (
    SELECT DISTINCT pl.liked_user_id
    FROM post_likes pl
    JOIN post_comments pc ON pl.post_id = pc.post_id
    WHERE pl.liked_user_id = pc.commented_user_id
  ) LOOP
    DBMS_OUTPUT.PUT_LINE('User ID ' || rec.liked_user_id || ' liked and commented on the same post.');
  END LOOP;
END;
/

